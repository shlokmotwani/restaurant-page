(()=>{"use strict";var n={208:(n,e,t)=>{t.d(e,{A:()=>p});var o=t(354),a=t.n(o),r=t(314),i=t.n(r),c=t(417),A=t.n(c),d=new URL(t(325),t.b),s=i()(a()),l=A()(d);s.push([n.id,`* {\n  margin: 0;\n  padding: 0;\n}\n\nhtml,\nbody {\n  width: 100%;\n  height: 100%;\n  box-sizing: border-box;\n}\n\nbody{\n    background: url(${l});\n    background-size: cover;\n}\n\nheader {\n  display: flex;\n  justify-content: center;\n  background-color: rgba(0, 0, 0, 0.5);\n}\n\nnav {\n  height: 10vh;\n  width: 40%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\nbutton {\n  width: 15%;\n  font-size: 25px;\n  color: white;\n  height: fit-content;\n  background: none;\n  border: none;\n  border-radius: 10%;\n}\n\n#content {\n  width: 100%;\n  min-height: 90%;\n  max-height: auto;\n  margin-top: 5%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n#heading {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 10%;\n}\n\nh1 {\n  font-size: 100px;\n}\n\nh4 {\n  font-size: 30px;\n  margin-top: 20px;\n}\n\nh1,\nh4,\n#contact-h6,\n#about-para {\n  background-color: rgba(0, 0, 0, 0.3);\n  color: rgba(255, 255, 255, 0.8);\n}\n\n#about-para {\n  width: 65%;\n  padding: 2%;\n  background-color: rgba(0, 0, 0, 0.6);\n  height: auto;\n}\n\n#about-para > p {\n  padding: 20px 0;\n  color: rgba(255, 255, 255, 0.8);\n  font-size: 2rem;\n}\n\n#contact-div {\n  margin-bottom: 18%;\n}\n\n#contact-h4 {\n  font-size: 3rem;\n}\n\n#contact-h6 {\n  text-align: center;\n  font-size: 20px;\n  color: rgba(255, 255, 255, 0.5);\n}\n\n#menu-div {\n  width: 80%;\n  height: 80%;\n  padding: 2%;\n  background-color: rgba(0, 0, 0, 0.6);\n}\n\n#menu-div > div {\n  margin: 30px 0;\n}\n\n#menu-div > div > p {\n  padding: 5px 0;\n}\n\n.pizza-details-para {\n  text-align: center;\n  font-size: 1.2rem;\n  color: rgba(255, 255, 255, 0.6);\n}\n\n.pizza-name-para {\n  text-align: center;\n  font-weight: bold;\n  padding: 8px 0;\n  color: rgba(255, 255, 255, 0.8);\n  font-size: 1.5rem;\n}\n`,"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,SAAS;EACT,UAAU;AACZ;;AAEA;;EAEE,WAAW;EACX,YAAY;EACZ,sBAAsB;AACxB;;AAEA;IACI,mDAAmC;IACnC,sBAAsB;AAC1B;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,oCAAoC;AACtC;;AAEA;EACE,YAAY;EACZ,UAAU;EACV,aAAa;EACb,8BAA8B;EAC9B,mBAAmB;AACrB;;AAEA;EACE,UAAU;EACV,eAAe;EACf,YAAY;EACZ,mBAAmB;EACnB,gBAAgB;EAChB,YAAY;EACZ,kBAAkB;AACpB;;AAEA;EACE,WAAW;EACX,eAAe;EACf,gBAAgB;EAChB,cAAc;EACd,aAAa;EACb,mBAAmB;EACnB,uBAAuB;AACzB;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,kBAAkB;AACpB;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,eAAe;EACf,gBAAgB;AAClB;;AAEA;;;;EAIE,oCAAoC;EACpC,+BAA+B;AACjC;;AAEA;EACE,UAAU;EACV,WAAW;EACX,oCAAoC;EACpC,YAAY;AACd;;AAEA;EACE,eAAe;EACf,+BAA+B;EAC/B,eAAe;AACjB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,kBAAkB;EAClB,eAAe;EACf,+BAA+B;AACjC;;AAEA;EACE,UAAU;EACV,WAAW;EACX,WAAW;EACX,oCAAoC;AACtC;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,kBAAkB;EAClB,iBAAiB;EACjB,+BAA+B;AACjC;;AAEA;EACE,kBAAkB;EAClB,iBAAiB;EACjB,cAAc;EACd,+BAA+B;EAC/B,iBAAiB;AACnB",sourcesContent:["* {\n  margin: 0;\n  padding: 0;\n}\n\nhtml,\nbody {\n  width: 100%;\n  height: 100%;\n  box-sizing: border-box;\n}\n\nbody{\n    background: url('./food_image.jpg');\n    background-size: cover;\n}\n\nheader {\n  display: flex;\n  justify-content: center;\n  background-color: rgba(0, 0, 0, 0.5);\n}\n\nnav {\n  height: 10vh;\n  width: 40%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\nbutton {\n  width: 15%;\n  font-size: 25px;\n  color: white;\n  height: fit-content;\n  background: none;\n  border: none;\n  border-radius: 10%;\n}\n\n#content {\n  width: 100%;\n  min-height: 90%;\n  max-height: auto;\n  margin-top: 5%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n#heading {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 10%;\n}\n\nh1 {\n  font-size: 100px;\n}\n\nh4 {\n  font-size: 30px;\n  margin-top: 20px;\n}\n\nh1,\nh4,\n#contact-h6,\n#about-para {\n  background-color: rgba(0, 0, 0, 0.3);\n  color: rgba(255, 255, 255, 0.8);\n}\n\n#about-para {\n  width: 65%;\n  padding: 2%;\n  background-color: rgba(0, 0, 0, 0.6);\n  height: auto;\n}\n\n#about-para > p {\n  padding: 20px 0;\n  color: rgba(255, 255, 255, 0.8);\n  font-size: 2rem;\n}\n\n#contact-div {\n  margin-bottom: 18%;\n}\n\n#contact-h4 {\n  font-size: 3rem;\n}\n\n#contact-h6 {\n  text-align: center;\n  font-size: 20px;\n  color: rgba(255, 255, 255, 0.5);\n}\n\n#menu-div {\n  width: 80%;\n  height: 80%;\n  padding: 2%;\n  background-color: rgba(0, 0, 0, 0.6);\n}\n\n#menu-div > div {\n  margin: 30px 0;\n}\n\n#menu-div > div > p {\n  padding: 5px 0;\n}\n\n.pizza-details-para {\n  text-align: center;\n  font-size: 1.2rem;\n  color: rgba(255, 255, 255, 0.6);\n}\n\n.pizza-name-para {\n  text-align: center;\n  font-weight: bold;\n  padding: 8px 0;\n  color: rgba(255, 255, 255, 0.8);\n  font-size: 1.5rem;\n}\n"],sourceRoot:""}]);const p=s},314:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,a,r){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(o)for(var c=0;c<this.length;c++){var A=this[c][0];null!=A&&(i[A]=!0)}for(var d=0;d<n.length;d++){var s=[].concat(n[d]);o&&i[s[0]]||(void 0!==r&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=r),t&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=t):s[2]=t),a&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=a):s[4]="".concat(a)),e.push(s))}},e}},417:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},354:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),r="/*# ".concat(a," */");return[e].concat([r]).join("\n")}return[e].join("\n")}},72:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var r={},i=[],c=0;c<n.length;c++){var A=n[c],d=o.base?A[0]+o.base:A[0],s=r[d]||0,l="".concat(d," ").concat(s);r[d]=s+1;var p=t(l),u={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var h=a(u,o);o.byIndex=c,e.splice(c,0,{identifier:l,updater:h,references:1})}i.push(l)}return i}function a(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,a){var r=o(n=n||[],a=a||{});return function(n){n=n||[];for(var i=0;i<r.length;i++){var c=t(r[i]);e[c].references--}for(var A=o(n,a),d=0;d<r.length;d++){var s=t(r[d]);0===e[s].references&&(e[s].updater(),e.splice(s,1))}r=A}}},659:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},540:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},56:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},825:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,a&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var r=t.sourceMap;r&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},113:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},325:(n,e,t)=>{n.exports=t.p+"6135b21e2656406251fb.jpg"}},e={};function t(o){var a=e[o];if(void 0!==a)return a.exports;var r=e[o]={id:o,exports:{}};return n[o](r,r.exports,t),r.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var o=e.getElementsByTagName("script");if(o.length)for(var a=o.length-1;a>-1&&(!n||!/^http(s?):/.test(n));)n=o[a--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,t.nc=void 0;var o=t(72),a=t.n(o),r=t(825),i=t.n(r),c=t(659),A=t.n(c),d=t(56),s=t.n(d),l=t(540),p=t.n(l),u=t(113),h=t.n(u),m=t(208),f={};function g(){const n=document.createElement("div");return n.id="menu-div",[{name:"Roast pumpkin and chorizo pizza",desc:"This quick and tasty chorizo pizza is perfect for a Friday night in.",price:"$8.00"},{name:"Silverbeet, broccolini and mozzarella pizza",desc:"Sunday night is pizza night. Enjoy this better-than-takeaway version which is filled with healthy gourmet toppings.",price:"$5.00"},{name:"Cauliflower pizzas with pumpkin and prosciutto",desc:"A made-over classic that uses cauliflower to create an amazing gluten-free pizza base.",price:"$10.00"},{name:"Heirloom tomato and pesto pizza",desc:"Pizza night! Get set for a fun, budget-friendly dinner with delicious new flavour combos.",price:"$8.50"},{name:"Cauliflower pizzas with pumpkin and prosciutto",desc:"A made-over classic that uses cauliflower to create an amazing gluten-free pizza base.",price:"$12.00"},{name:"Polenta, cheese and mushroom pizza",desc:"This three cheese gluten-free pizza is easy enough for a midweek meal and decadent enough for a dinner party course.",price:"$7.00"}].forEach((e=>{const t=document.createElement("p");t.classList.add("pizza-name-para");const o=document.createElement("p");o.classList.add("pizza-details-para");const a=document.createElement("p");a.classList.add("pizza-details-para");const r=document.createElement("div");r.classList.add("pizza-items-div"),t.textContent=e.name,o.textContent=e.desc,a.textContent=e.price,r.appendChild(t),r.appendChild(o),r.appendChild(a),n.appendChild(r)})),n}function C(){let n=document.createElement("div");n.id="about-para";let e=document.createElement("p");e.textContent="At The Pizza Loft, we believe in the magic of good food and great company. Nestled in the heart of Connaught Place, our cozy little spot is where flavors come alive and memories are made.";let t=document.createElement("p");t.textContent="We are passionate about serving delicious and fresh pizza made from locally-sourced ingredients that will make you feel right at home. Our menu is a celebration of artisan pizza, crafted with love and inspired by the seasons.";let o=document.createElement("p");o.textContent="Whether you're stopping by for a quick bite (yes, we do offer pizza slices!), a leisurely meal, or a special occasion, we promise a warm welcome, friendly service, and a dining experience that will leave you smiling.";let a=document.createElement("p");a.textContent="Thank you for choosing The Pizza Loft. We can't wait to serve you!";let r=document.createElement("p");return r.textContent="Bon appétit!",n.appendChild(e),n.appendChild(t),n.appendChild(o),n.appendChild(a),n.appendChild(r),n}function E(){const n=document.createElement("h4");n.id="contact-h4",n.textContent="Write to us at hello@thepizzaloft.com";const e=document.createElement("h6");e.id="contact-h6",e.textContent="(not a real address!)";const t=document.createElement("div");return t.id="contact-div",t.appendChild(n),t.appendChild(e),t}f.styleTagTransform=h(),f.setAttributes=s(),f.insert=A().bind(null,"head"),f.domAPI=i(),f.insertStyleElement=p(),a()(m.A,f),m.A&&m.A.locals&&m.A.locals,console.log("Shlok");const b=document.querySelector("nav"),v=document.querySelector("#content"),B=["Menu","About","Contact"];for(let n=0;n<B.length;n++){const e=document.createElement("button");e.textContent=B[n],"Menu"==e.textContent?e.addEventListener("click",(()=>{console.log(e.textContent+" was clicked."),v.innerHTML="",v.appendChild(g())})):"About"==e.textContent?e.addEventListener("click",(()=>{console.log(e.textContent+" was clicked."),v.innerHTML="",v.appendChild(C())})):"Contact"==e.textContent&&e.addEventListener("click",(()=>{console.log(e.textContent+" was clicked."),v.innerHTML="",v.appendChild(E())})),b.appendChild(e)}v.appendChild(function(){const n=document.createElement("div");n.id="heading";const e=document.createElement("h1");e.textContent="The Pizza Loft";const t=document.createElement("h4");return t.textContent="Connaught Place, New Delhi",n.appendChild(e),n.appendChild(t),n}())})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,